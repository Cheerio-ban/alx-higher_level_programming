==============================
How to Use 2-matrix_divided.py
==============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` with all elements divided by ``div``.


[::]
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [3, 6, 9],
...     [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

[::]
>>> matrix = [
... [1.4, -2.2, 3.0],
... [4.6, 5.2, -7.6]
... ]

>>> print(matrix_divided(matrix, 3))
[[0.47, -0.73, 1.0], [1.53, 1.73, -2.53]]

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

[::]
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

[::]
>>> matrix = [
... [0, 0, 0],
... [0, 0, 0]
... ]

>>> print(matrix_divided(matrix, 3))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Invalid Matrices
==============

The parameter ``matrix`` must be a list of lists consisting of either ints or
floats. If ``matrix`` is not a list, a TypeError is raised
[::]

- Missing one argument
    >>> print(matrix_divided([[2, 2], [3, 5]]))
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'



::

    >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Finally, all the rows in ``matrix`` must be the same size. If any rows are
of different sizes, a new TypeError is raised.

::

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
================

The parameter ``div`` must be either an int or float. Otherwise, a TypeError
is raised.

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

``div`` must also be non-zero. Otherwise, a ZeroDivisionError is raised.

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
